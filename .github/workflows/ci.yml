name: build

on:
  push:
    branches: 
    - '**'
    
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-win:
    runs-on: [windows-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
  build-macos:
    runs-on: [macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Install updated ncurses
      run: brew install ncurses
    - name: Configure CMake
      # macos runner brew will install ncurses to /usr/local/Cellar, provide that path to cmake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=/usr/local/Cellar/ncurses/6.2
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  build-ubuntu:
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

  valgrind-test:
    # this could probably use the results of build-ubuntu
    # but I don't know how to do that yet
    runs-on: [ubuntu-latest]
    env:
      TERM: xterm-256color
    steps:
    - uses: actions/checkout@v2
    - name: Install valgrind
      run: sudo apt install valgrind -y
    - name: Setup test script
      run: chmod +x ./.github/workflows/run_valgrind.sh
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
    - name: Run under valgrind
      run: ./.github/workflows/run_valgrind.sh