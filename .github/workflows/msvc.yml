# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# Find more information at:
# https://github.com/microsoft/msvc-code-analysis-action

name: Microsoft C++ Code Analysis

on:
  push:
    branches: [ release, main, dev ]
  pull_request:
    branches: [ release, main, dev ]
    
env:
  # Path to the CMake build directory.
  build: '${{ github.workspace }}/build'
  BUILD_TYPE: Release

permissions:
  contents: read

jobs:
  analyze:
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      
    name: Analyze
    runs-on: windows-latest
          
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
          submodules: recursive
      
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
      
    # Build is not required unless generated source files are used
    # We do this for fonts related to SDL2 (Courier.ttf at the moment)
    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Initialize MSVC Code Analysis
      uses: microsoft/msvc-code-analysis-action@v0.1.1
      # Provide a unique ID to access the sarif output path
      id: run-analysis
      with:
        cmakeBuildDirectory: ${{ env.build }}
        buildConfiguration: ${{ env.BUILD_TYPE }}
        # Ruleset file that will determine what checks will be run
        ruleset: NativeRecommendedRules.ruleset

    # Upload SARIF file to GitHub Code Scanning Alerts
    - name: Upload SARIF to GitHub
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.run-analysis.outputs.sarif }}

    # Upload SARIF file as an Artifact to download and view
    - name: Upload SARIF as an Artifact
      uses: actions/upload-artifact@v3
      with:
         name: sarif-file
         path: ${{ steps.run-analysis.outputs.sarif }}
